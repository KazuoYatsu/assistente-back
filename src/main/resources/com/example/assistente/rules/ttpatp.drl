package com.example.assistente.rules
dialect "mvel"

import java.time.LocalDate
import java.time.Period

import com.example.assistente.model.dto.ExamePacienteDTO
import com.example.assistente.model.dto.PacienteDTO
import com.example.assistente.model.dto.ResultadoDTO
import com.example.assistente.drools.model.ExamesDTO
import com.example.assistente.drools.Indexadores
import com.example.assistente.drools.model.ResultadosDTO
import com.example.assistente.model.type.TiposExames
import com.example.assistente.model.type.Status
import com.example.assistente.model.type.SexoPaciente
import java.util.Arrays

// leucocitos
rule "tp"
salience 3
	when
	    ResultadosDTO($resultados: resultados)
	    ExamesDTO($exames: exames)
		$exame: ExamePacienteDTO(tipoExame == TiposExames.tp) from $exames
	then
		System.out.println("tp");
        $resultados.add(ResultadoDTO.builder()
            .value($exame.value)
            .values(Indexadores.TTPATP.tp)
            .tipoExame($exame.tipoExame)
            .build());
	end
	
// leucocitos
rule "inrTp"
salience 3
	when
	    ResultadosDTO($resultados: resultados)
	    ExamesDTO($exames: exames)
		$exame: ExamePacienteDTO(tipoExame == TiposExames.inrTp) from $exames
	then
		System.out.println("inrTp");
        $resultados.add(ResultadoDTO.builder()
            .value($exame.value)
            .values(Indexadores.TTPATP.inrTp)
            .tipoExame($exame.tipoExame)
            .build());
	end
	
// leucocitos
rule "ttpa"
salience 3
	when
	    ResultadosDTO($resultados: resultados)
	    ExamesDTO($exames: exames)
		$exame: ExamePacienteDTO(tipoExame == TiposExames.ttpa) from $exames
	then
		System.out.println("ttpa");
        $resultados.add(ResultadoDTO.builder()
            .value($exame.value)
            .values(Indexadores.TTPATP.ttpa)
            .tipoExame($exame.tipoExame)
            .build());
	end
