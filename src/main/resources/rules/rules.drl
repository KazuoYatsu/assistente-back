package rules

import com.example.assistente.dto.ExamePacienteDTO
import com.example.assistente.type.TiposExames
import com.example.assistente.type.Status
import java.util.Arrays

//regras para celulas vermelhas
rule "celula vermelha values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula _vermelha)
	then
		exame.setValues(Arrays.asList(100, 150));
	end
	
rule "celula vermelha low"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula_vermelha, value < 100)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "celula vermelha high"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula_vermelha, value > 150)
	then
		exame.setStatus(Status.acima);
	end
	
rule "celula vermelha ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula_vermelha, value < 150, value > 100)
	then
		exame.setStatus(Status.ideal);
	end
		
rule "celula vermelha mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula_vermelha, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, suas celulas vermelhas estao baixas");
	end
		
rule "celula vermelha mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula_vermelha, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, suas celulas vermelhas estao altas");
	end
	
rule "celula vermelha mensagem ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.celula_vermelha, status == Status.ideal)
	then
		exame.setMessage("Parabens, suas celulas vermelhas estao em ordem!");
	end
	
//regra para ureia e creatina
rule "ureia e creatina values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina)
	then
		exame.setValues(Arrays.asList(13, 43));
	end

rule "ureia e creatina low"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina, value < 13)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "ureia e creatina high"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina, value > 43)
	then
		exame.setStatus(Status.acima);
	end

rule "ureia e creatina ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina, value < 43, value > 13)
	then
		exame.setStatus(Status.ideal);
	end
	
rule "ureia e creatina mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, niveis de ureia e creatina muito baixos");
	end
		
rule "ureia e creatina mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, niveis de ureia e creatina muito altos");
	end
	
rule "ureia e creatina mensagem ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.ureia_creatinina, status == Status.ideal)
	then
		exame.setMessage("Parabens, niveis de ureia e creatina detro do ideal");
	end

//regra para glicose
rule "glicose values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose)
	then
		exame.setValues(Arrays.asList(99, 126));
	end

rule "glicose normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose, value < 99)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "glicose pre"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose, value < 126, value > 99)		
	then
		exame.setStatus(Status.acima);
	end

rule "glicose diabetes"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose, value > 126)
	then
		exame.setStatus(Status.ideal);
	end
	
rule "glicose mensagem normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose, status == Status.abaixo)
	then
		exame.setMessage("Parabens, nivel de glicose detro do ideal");
	end
		
rule "glicose mensagem pre"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, nivel de glicose  muito alto");
	end
	
rule "glicose mensagem diabetes"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.glicose, status == Status.ideal)
	then
		exame.setMessage("Consulte um medico, nivel de glicose alarmante");
	end
//plaquetas
rule "plaquetas values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas)
	then
		exame.setValues(Arrays.asList(150000, 450000));
	end

rule "plaquetas abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas, value < 150000)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "plaquetas normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas, value < 450000, value > 150000)		
	then
		exame.setStatus(Status.ideal);
	end

rule "plaquetas acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas, value > 450000)
	then
		exame.setStatus(Status.acima);
	end
	
rule "plaquetas mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, contagem de plaquetas abaixo do ideal");
	end
		
rule "plaquetas mensagem normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas, status == Status.ideal)
	then
		exame.setMessage("Parabens, contagem de plaquetas dentro do ideal");
	end
	
rule "plaquetas mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.plaquetas, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, contagem de plaquetas mais elevado que o ideal");
	end
//abulmina ainda mais de 16
rule "abulmina values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina)
	then
		exame.setValues(Arrays.asList(35, 50));
	end

rule "abulmina abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina, value < 35)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "abulmina normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina, value < 50, value > 35)		
	then
		exame.setStatus(Status.ideal);
	end

rule "abulmina acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina, value > 50)
	then
		exame.setStatus(Status.acima);
	end
	
rule "abulmina mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, valores de abulmina abaixo do ideal");
	end
		
rule "abulmina mensagem normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina, status == Status.ideal)
	then
		exame.setMessage("Parabens, valores de abulmina dentro do ideal");
	end
	
rule "abulmina mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.albumina, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, valores de abulmina mais elevado que o ideal");
	end
//vhs menos de 50
rule "vhs values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs)
	then
		exame.setValues(Arrays.asList(15, 20));
	end

rule "vhs abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs, value < 15)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "vhs normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs, value < 20, value > 15)		
	then
		exame.setStatus(Status.ideal);
	end

rule "vhs acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs, value > 20)
	then
		exame.setStatus(Status.acima);
	end
	
rule "vhs mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, contagem de fibrinogênio abaixo do ideal");
	end
		
rule "vhs mensagem normal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs, status == Status.ideal)
	then
		exame.setMessage("Parabens, contagem de fibrinogênio dentro o ideal");
	end
	
rule "vhs mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.vhs, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, contagem de fibrinogênio mais elevado que o ideal");
	end
//trigliceridios em jejum adultos
rule "trigliceridios values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.triglicerideos)
	then
		exame.setValues(Arrays.asList(150));
	end

rule "trigliceridios abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.triglicerideos, value < 150)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "trigliceridios acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.triglicerideos, value > 150)		
	then
		exame.setStatus(Status.ideal);
	end
rule "trigliceridios mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.triglicerideos, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, contagem de triglicerideos dentro do ideal");
	end
		
rule "trigliceridios mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.triglicerideos, status == Status.acima)
	then
		exame.setMessage("Parabens, contagem de triglicerideos acuma o ideal");
	end
//hdl 
rule "hdl values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl)
	then
		exame.setValues(Arrays.asList(20, 60));
	end

rule "hdl abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl, value < 40)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "hdl bom"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl, value < 60, value > 40)		
	then
		exame.setStatus(Status.acima);
	end

rule "hdl ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl, value > 60)
	then
		exame.setStatus(Status.ideal);
	end
	
rule "hdl mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, colesterol hdl abaixo do bom");
	end
		
rule "hdl mensagem bom"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl, status == Status.acima)
	then
		exame.setMessage("Parabens, colesterol hdl  dentro do bom");
	end
	
rule "hdl mensagem ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.hdl, status == Status.ideal)
	then
		exame.setMessage("Consulte um medico, colesterol hdl ideal");
	end
//acido_urico mulher
rule "acido_urico values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico)
	then
		exame.setValues(Arrays.asList(2.4, 6.0));
	end

rule "acido_urico abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, value < 2.4)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "acido_urico acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, value < 6.0, value > 2.4)		
	then
		exame.setStatus(Status.ideal);
	end

rule "acido_urico ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, value > 6.0)
	then
		exame.setStatus(Status.acima);
	end
	
rule "acido_urico mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, niveis de acido urico abaixo do ideal");
	end
		
rule "acido_urico mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, niveis de acido urico acima do ideal");
	end
	
rule "acido_urico mensagem ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, status == Status.ideal)
	then
		exame.setMessage("Consulte um medico, niveis de acido urico ideais");
	end
//pcr
rule "pcr values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.pcr)
	then
		exame.setValues(Arrays.asList(0.3, 3.0));
	end

rule "pcr abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.pcr, value < 0.3)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "pcr acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, value < 3.0, value > 0.3)		
	then
		exame.setStatus(Status.ideal);
	end

rule "pcr ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.acido_urico, value > 3.0)
	then
		exame.setStatus(Status.acima);
	end
	
rule "pcr mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.pcr, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, niveis de pcr do ideal");
	end
		
rule "pcr mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.pcr, status == Status.acima)
	then
		exame.setMessage("Consulte um medico, niveis de pcr acima do ideal");
	end
	
rule "pcr mensagem ideal"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.pcr, status == Status.ideal)
	then
		exame.setMessage("Consulte um medico, niveis de pcr ideais");
	end
//psa ate 50 anos
rule "psa values"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.psa)
	then
		exame.setValues(Arrays.asList(4));
	end

rule "psa abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.psa, value < 4)
	then
		exame.setStatus(Status.abaixo);
	end
	
rule "psa acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.psa, value > 4)		
	then
		exame.setStatus(Status.ideal);
	end
rule "psa mensagem abaixo"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.psa, status == Status.abaixo)
	then
		exame.setMessage("Consulte um medico, niveis de psa dentro do ideal");
	end
		
rule "psa mensagem acima"
	when
		exame: ExamePacienteDTO(tipoExame == TiposExames.psa, status == Status.acima)
	then
		exame.setMessage("Parabens, contagem de triglicerideos acima o ideal");
	end